---
title: "Tidycomm-tests"
author: "Test Bär"

format: 
  pdf:
    documentclass: scrartcl
    papersize: a4
    keep-tex: true
    toc: true
    number-sections: true
    colorlinks: true
  html: 
    embed-resources: true 
  docx: default

lang: de-CH
editor: source
---

```{r}
#| label: setup
#| echo: false
#| warings: false

pacman::p_load(tidyverse, viridisLite, viridis, tidycomm)

knitr::opts_chunk$set(
  collapse = TRUE,
  echo = FALSE,
  fig.width = 7,
  fig.align = "center",
  fig.pos = "H",
  out.width = "85%",
  fig.show = 'hold',
  fig.subcap = TRUE,
  eval = TRUE, 
  warning = FALSE
)

options(
  dplyr.summarise.inform = FALSE,
  design = design_uzh(),
  pillar.bold = TRUE,
  knitr.kable.NA = '---',
  width = 77 # 80 - 3 for #> comment
)
```

```{r}
#| label: Analyseobjekt
#| include: false

DATEN <- tidycomm::WoJ
```

# Regressionsanalyse mit den Daten "World of Journalism"

Es ist immer ratsam sich zunächst die Regressionskoeffizienten genau anzuschauen, was mit einer Tabelle praktisch am besten geht, wie sie in @tbl-tab1 einsehbar ist.

```{r}
#| label: tbl-tab1
#| tbl-cap: Regression auf autonome Auswahl

model <- lm(autonomy_selection ~ work_experience + trust_government + ethics_1 + ethics_2 + ethics_3 + ethics_4, data = DATEN)

reg_tab <- tidycomm::regress(model, 
                    check_multicollinearity = FALSE, 
                    CIs = TRUE) 
reg_tab |> 
  tidycomm::knit_regress_table() 
```

```{r}
reg_tab |>
  visualize(which = 'sbci') 
```


## Teiltabelle


## Analyse der Voraussetzungen

In @fig-reslev ist gut zu erkennen.

```{r}
#| label: fig-reslev
#| fig.cap: residualsleverage plot

reg_tab |> 
  tidycomm::visualize(which = "reslev", .design = design_uzh())
```

Schaut man sich darüber hinaus @fig-scaleloc im schönen UZH-Design an, wird einem alles klar.

```{r}
#| label: fig-scaleloc
#| fig.cap: scalelocation plot

reg_tab |> 
  tidycomm::visualize(which = "scaloc", .design = design_uzh())
```

Nicht zuletzt sollte man sich die Residuen in Abhängigkeit der geschätzten Werte ansehen, was im schönen Viridis-Design in @fig-resfit durchaus möglich ist, auch wenn das dunkle Lila nicht gut zu erkennen ist.

```{r}
#| label: fig-resfit
#| fig.cap: residualsleverage plot


reg_tab |> 
  tidycomm::visualize(which = "resfit", .design = design_viridis())
```

# Häufigkeitsauszählung

```{r}
#| echo: false

# DATEN |> 
#   sjlabelled::var_labels(autonomy_selection = "Wahlfreiheit") |> 
#   sjlabelled::set_labels(autonomy_selection, labels = c("keine" = 1, "volle" = 5)) |> 
#   tidycomm::knit_frequencies(autonomy_selection, work_experience)

DATEN |> 
  tidycomm::knit_frequencies(country, width_pct = 80) |> 
  gt::tab_footnote("Erste Zeile mit etwas Text, der dann umgebrochen werden")|>
  gt::tab_footnote("muss, damit er in die Breite der Tabelle passt.")
```

